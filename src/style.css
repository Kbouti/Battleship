:root {
  --blue1: #26a2ff;
  --blue2: #1e9eff;
  --blue3: #169bff;
  --blue4: #0e97ff;
  --blue5: #0694ff;
  --blue6: #0090fc;
  --darkBlue: #001b30;
}

body {
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
  background-color: var(--darkBlue);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

#header {
  display: flex;
  flex-direction: column;
  flex-grow: 0.5;
  justify-content: center;
  align-items: center;
  background-color: #003560;
  color: gray;
  width: 100%;
}

#newGameForm {
  width: 80vw;
  height: 60vh;
  background-color: rgb(180, 180, 180);
  border-radius: 10px;
  display: flex;
  flex-direction: column;
  align-content: center;
}

#formContent {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
}

#newGameFormHeader {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
}

#newGameTitle {
  align-self: center;
}

.formContentHalf {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: center;
}

#formFooter {
  flex-grow: 0.7;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#modeSelectLabel {
  display: flex;
  justify-content: center;
}

.modeSelectContainer {
  display: flex;
  justify-content: space-between;
  width: 10rem;
}

#beginButton {
  margin: auto;
}

#messageBox {
  width: 50vw;
  height: 30vh;
  /* display: flex; */
  flex-direction:column;
  align-items: center;
  position: absolute;
  background-color: rgb(180, 180, 180);
  border-radius: 10px;
  z-index: 3;
}

.flex {
  display:flex;
}

.hidden {
  display:none;
}

.GameBoard {
  display: grid;
  position: relative;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
}

.setMode {
  /* Used when we're setting the gameboard - it becomes larger and centered in the screen.
  Once the gameboard is set, it will move down to make room for scoreBoard */
  /* position: absolute; */
  /* top: 100%; */
  margin: 20px;

  height: 60vh;
  width: 60vh;
}

.playMode {
  /* Once the board has been set and we need to fit two boards on the screen */
  height: 30vh;
  width: 30vh;
  margin: 20px;
}

.backgroundContainer {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  grid-template-rows: repeat(11, 1fr);
  position: relative;
  grid-area: 1/1;
  z-index: 1;
}

.gameGridContainer {
  position: relative;
  height: 100%;
  width: 100%;
  grid-area: 1/1;
  z-index: 2;
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  grid-template-rows: repeat(11, 1fr);
}

.oceanSpace {
  /* The blue squares in the background div */
}

.boardLegend {
  color: rgb(209, 209, 209);
  display: flex;
  justify-content: center;
  align-items: center;
}

.boardSpace {
  /* The actual spaces in play on the gridBoard */
}
.gridSquare {
  /* All of the squares on the gridBoard, including the legend */
}

.oceanBlue1 {
  background-color: var(--blue1);
}
.oceanBlue2 {
  background-color: var(--blue2);
}
.oceanBlue3 {
  background-color: var(--blue3);
}
.oceanBlue4 {
  background-color: var(--blue4);
}
.oceanBlue5 {
  background-color: var(--blue5);
}
.oceanBlue6 {
  background-color: var(--blue6);
}

.ship {
  background-color: grey;
  border: 3px solid black;
  z-index: 2;
  border-radius: 10px;
  position: relative;
  left: 7%;
  top: 7%;
}

.CarrierHorizontal {
  /* size 5 */
  width: 470%;
  height: 70%;
}

.BattleshipHorizontal {
  /* size 4 */
  width: 370%;
  height: 70%;
}

.SubmarineHorizontal {
  /* size 3 */
  width: 270%;
  height: 70%;
}

.CruiserHorizontal {
  /* size 3 */
  width: 270%;
  height: 70%;
}

.DestroyerHorizontal {
  /* size 2 */
  width: 170%;
  height: 70%;
}

.CarrierVerticle {
  /* size 5 */
  width: 70%;
  height: 470%;
}

.BattleshipVerticle {
  /* size 4 */
  width: 70%;
  height: 370%;
}

.SubmarineVerticle {
  /* size 3 */
  width: 70%;
  height: 270%;
}

.CruiserVerticle {
  /* size 3 */
  width: 70%;
  height: 270%;
}

.DestroyerVerticle {
  /* size 2 */
  width: 70%;
  height: 170%;
}

.occupied {
  background-color: rgb(180, 180, 180);
}

.hit {
}
